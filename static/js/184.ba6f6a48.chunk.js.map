{"version":3,"file":"static/js/184.ba6f6a48.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/backLink/BackLink.module.css?ad0b","components/backLink/BackLink.jsx","webpack://goit-react-hw-05-movies/./src/components/movieInfo/MovieInfo.module.css?04ed","components/movieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backlink\":\"BackLink_backlink__4tKEe\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from 'components/backLink/BackLink.module.css'\n\nconst BackLink = ({to}) => {\n\treturn (\n\t\t<Link to={to} className={css.backlink}>\t&larr; Go back</Link>\n\t)\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n\tto: PropTypes.shape({\n\t\tpath: PropTypes.string,\n\t})\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieInfo_movieCard__2PgTK\"};","import PropTypes from 'prop-types';\nimport css from 'components/movieInfo/MovieInfo.module.css';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieInfo = ({poster_path, title, release_date, vote_average, overview, genres}) => {\n\treturn (\n\t\t<div className={css.movieCard}>\n\t\t\t{poster_path && <img src={IMAGES_BASE_URL + poster_path} alt={title} />}\n\t\t\t<div>\n\t\t\t\t<h2>{title} ({release_date?.slice(0, 4)})</h2>\n\t\t\t\t<p>User Score: {Math.round(vote_average * 10)}%</p>\n\t\t\t\t<h3>Overview</h3>\n\t\t\t\t<p>{overview}</p>\n\t\t\t\t<h3>Genres</h3>\n\t\t\t\t<p>{genres?.map(genre => genre.name).join(' ')}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n\tposter_path: PropTypes.string, \n\ttitle: PropTypes.string, \n\trelease_date: PropTypes.string, \n\tvote_average: PropTypes.number, \n\toverview: PropTypes.string, \n\tgenres: PropTypes.arrayOf(PropTypes.shape({\n\t\tname: PropTypes.string,\n\t})),\n}","import React, { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\nimport { fetchMoviesById } from 'services/Api';\nimport BackLink from 'components/backLink/BackLink';\nimport Loader from 'components/loader/Loader';\nimport MovieInfo from 'components/movieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n\n  const {movieId} = useParams();\n\tconst [movie, setMovie] = useState({});\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkPath = location.state?.from ?? '/';\n  \n  useEffect(() => {\n    async function fetchMovies() {\n      const movies = await fetchMoviesById(movieId);\n      setMovie(movies);\n    }\n    fetchMovies().catch((error) => {\n      setError('The resource you requsted could not be found.');\n      console.error(error);\n    });\n  }, [movieId]);\n\n\treturn (\n\t\t<>\n      <BackLink to={backLinkPath}/>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n        <MovieInfo\n        poster_path={movie.poster_path}\n        title={movie.title}\n        release_date={movie.release_date}\n        vote_average={movie.vote_average}\n        overview={movie.overview}\n        genres={movie.genres}\n        />\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to='cast' state={{from: backLinkPath}}>Cast</Link>\n          </li>\n          <li>\n            <Link to='reviews' state={{from: backLinkPath}}>Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        </>\n      )}\n\t\t</>\n\t);\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '7d64af72531b3a4fd4be20da05e7a65f';\n\nexport const fetchTrendingMovies = async () => {\n\tconst response = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesSearchQuery = async (searchQuery) => {\n\tconst response = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchQuery,\n\t\t\tpage: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesById = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.cast;\n};\n\nexport const fetchMovieRewiews = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tpafe: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n}"],"names":["to","className","css","poster_path","title","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","genre","name","join","movieId","useParams","useState","movie","setMovie","error","setError","backLinkPath","useLocation","state","from","useEffect","fetchMoviesById","movies","fetchMovies","catch","console","Suspense","fallback","Loader","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","fetchMoviesSearchQuery","searchQuery","query","page","movie_id","fetchMovieCast","cast","fetchMovieRewiews","pafe"],"sourceRoot":""}
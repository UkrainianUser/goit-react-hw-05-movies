{"version":3,"file":"static/js/607.c4c1b15d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/listMovies/ListMovies.module.css?a57c","components/listMovies/ListMovies.jsx","webpack://goit-react-hw-05-movies/./src/components/searchBar/SearchBar.module.css?1f80","components/searchBar/SearchBar.jsx","pages/Movies.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListMovies_list__-DUZK\",\"item\":\"ListMovies_item__8luVs\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from 'components/listMovies/ListMovies.module.css'\n\nconst ListMovies = ({movies}) => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<ul className={css.list}>\n\t\t\t{movies.map((movie) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={movie.id} className={css.item}>\n\t\t\t\t\t\t<Link to={`/movies/${movie.id}`} state={{from: location}}>\n\t\t\t\t\t\t{movie.name? movie.name : movie.title}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n};\n\nexport default ListMovies;\n\nListMovies.propTypes = {\n\tmovies: PropTypes.arrayOf(PropTypes.shape({\n\t\tid: PropTypes.number.isRequired,\n\t\tname: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t}))\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchBar_input__du0TV\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport css from 'components/searchBar/SearchBar.module.css'\n\nconst SearchBar = ({onSubmit, searchQuery}) => {\n\tconst [query, setQuery] = useState('');\n\tconst [disabledBtn, setDisabledBtn] = useState(false);\n\n\tconst handleChange = (evt) => {\n\t\tsetQuery(evt.target.value);\n\t\tsetDisabledBtn(false);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\n\t\tif (query.trim() === '') {\n\t\t\tNotiflix.Notify.warning('Search is a required field');\n\t\t\treturn;\n\t\t}\n\n\t\tonSubmit(query);\n\t\tsetDisabledBtn(true);\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\tclassName={css.input}\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"query\"\n\t\t\t\tvalue={query}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder=\"Enter the name of the movie\"\n\t\t\t/>\n\t\t\t<button type=\"submit\" disabled={disabledBtn}>Search</button>\n\t\t</form>\n\t)\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tsearchQuery: PropTypes.string,\n}","import React, {  useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesSearchQuery } from 'services/Api';\nimport SearchBar from 'components/searchBar/SearchBar';\nimport ListMovies from 'components/listMovies/ListMovies';\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n\tconst [movies, setMovies] = useState([]);\n\tconst [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      const results = await fetchMoviesSearchQuery(query);\n      setMovies(results);\n    }\n    fetchMovies().catch((error) => {\n      setError('Sorry, something went wrong...');\n      console.error(error);\n    });\n\n  }, [query]);\n\n  const getSearchQuery = (searchQuery) => {\n    setSearchParams({query: searchQuery});\n  }\n\n\treturn (\n\t\t<>\n      <SearchBar onSubmit={getSearchQuery} searchQuery={query}/>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <ListMovies movies={movies} />\n      )}\n\t\t</>\n\t);\n};\n\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '7d64af72531b3a4fd4be20da05e7a65f';\n\nexport const fetchTrendingMovies = async () => {\n\tconst response = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesSearchQuery = async (searchQuery) => {\n\tconst response = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchQuery,\n\t\t\tpage: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesById = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.cast;\n};\n\nexport const fetchMovieRewiews = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tpafe: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n}"],"names":["movies","location","useLocation","className","css","map","movie","to","id","state","from","name","title","onSubmit","searchQuery","useState","query","setQuery","disabledBtn","setDisabledBtn","evt","preventDefault","trim","Notiflix","type","value","onChange","target","placeholder","disabled","useSearchParams","searchParams","setSearchParams","get","setMovies","error","setError","useEffect","fetchMoviesSearchQuery","results","fetchMovies","catch","console","ListMovies","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","page","fetchMoviesById","movie_id","fetchMovieCast","cast","fetchMovieRewiews","pafe"],"sourceRoot":""}
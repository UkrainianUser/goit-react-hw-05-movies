{"version":3,"file":"static/js/429.9c6ed42c.chunk.js","mappings":"+PAcA,EAVoB,SAAC,GAA8C,IAA7CA,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAClD,OACC,0BACEF,IAAgB,gBAAKG,IALD,mCAKsBH,EAAcI,IAAKH,KAC9D,wBAAKA,KACL,uCAAeC,OAGjB,EC8BD,EArCa,WAEZ,IAAOG,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACf,qGACoBC,EAAAA,EAAAA,IAAeR,GADnC,OACOG,EADP,OAECC,EAAQD,GAFT,2CADe,yBAAC,WAAD,gCAKfM,GAAYC,OAAM,SAACL,GAClBC,EAAS,gCACTK,QAAQN,MAAMA,EACd,GACD,GAAE,CAACL,KAGH,yBACEK,GACA,uBAAIA,KAEJ,+BACEF,QADF,IACEA,OADF,EACEA,EAAMS,KAAI,SAACC,GACX,OACC,SAAC,EAAD,CACClB,aAAckB,EAAUlB,aACxBC,cAAeiB,EAAUjB,cACzBC,UAAWgB,EAAUhB,WAHJgB,EAAUC,GAK7B,OAKL,C,+LCtCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAU,mCAEVC,EAAmB,mCAAG,oGACXF,EAAAA,EAAAA,IAAU,qBAAsB,CACtDG,OAAQ,CACPC,QAASH,KAHuB,cAC5BI,EAD4B,yBAO3BA,EAASC,KAAKC,SAPa,2CAAH,qDAUnBC,EAAsB,mCAAG,WAAOC,GAAP,uFACdT,EAAAA,EAAAA,IAAU,eAAgB,CAChDG,OAAQ,CACPC,QAASH,EACTS,MAAOD,EACPE,KAAM,KAL6B,cAC/BN,EAD+B,yBAS9BA,EAASC,KAAKC,SATgB,2CAAH,sDAYtBK,EAAe,mCAAG,WAAOC,GAAP,uFACPb,EAAAA,EAAAA,IAAA,gBAAmBa,GAAY,CACrDV,OAAQ,CACPC,QAASH,KAHmB,cACxBI,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUfb,EAAc,mCAAG,WAAOoB,GAAP,uFACNb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAuC,CAC7DV,OAAQ,CACPC,QAASH,KAHkB,cACvBI,EADuB,yBAOtBA,EAASC,KAAKlB,MAPQ,2CAAH,sDAUd0B,EAAiB,mCAAG,WAAOD,GAAP,uFACTb,EAAAA,EAAAA,IAAA,gBAAmBa,GAAY,CACrDV,OAAQ,CACPC,QAASH,EACTc,KAAM,KAJwB,cAC1BV,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,qD","sources":["components/castDetails/CastDetails.jsx","components/cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst CastDetails = ({profile_path, original_name, character}) => {\n\treturn (\n\t\t<li>\n\t\t\t{profile_path && <img src={IMAGES_BASE_URL+profile_path} alt={original_name}/>}\n\t\t\t<h4>{original_name}</h4>\n\t\t\t<p>Character: {character}</p>\n\t\t</li>\n\t)\n};\n\nexport default CastDetails;\n\nCastDetails.propTypes = {\n\tprofile_path: PropTypes.string,\n\toriginal_name: PropTypes.string,\n\tcharacter: PropTypes.string,\n}","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieCast } from \"services/Api\";\nimport CastDetails from \"components/castDetails/CastDetails\";\n\nconst Cast = () => {\n\n\tconst {movieId} = useParams();\n\tconst [cast, setCast] = useState([]);\n\tconst [error, setError] = useState('');\n\n\tuseEffect(() => {\n\t\tasync function fetchCast() {\n\t\t\tconst cast = await fetchMovieCast(movieId);\n\t\t\tsetCast(cast);\n\t\t}\n\t\tfetchCast().catch((error) => {\n\t\t\tsetError('Sorry, something went wrong.');\n\t\t\tconsole.error(error);\n\t\t})\n\t}, [movieId]);\n\n\treturn (\n\t\t<div>\n\t\t\t{error ? (\n\t\t\t\t<p>{error}</p>\n\t\t\t) : (\n\t\t\t\t<ul>\n\t\t\t\t\t{cast?.map((castValue) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<CastDetails key={castValue.id}\n\t\t\t\t\t\t\t\tprofile_path={castValue.profile_path}\n\t\t\t\t\t\t\t\toriginal_name={castValue.original_name}\n\t\t\t\t\t\t\t\tcharacter={castValue.character} />\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '7d64af72531b3a4fd4be20da05e7a65f';\n\nexport const fetchTrendingMovies = async () => {\n\tconst response = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesSearchQuery = async (searchQuery) => {\n\tconst response = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchQuery,\n\t\t\tpage: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMoviesById = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.cast;\n};\n\nexport const fetchMovieRewiews = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tpafe: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n}"],"names":["profile_path","original_name","character","src","alt","movieId","useParams","useState","cast","setCast","error","setError","useEffect","fetchMovieCast","fetchCast","catch","console","map","castValue","id","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","fetchMoviesSearchQuery","searchQuery","query","page","fetchMoviesById","movie_id","fetchMovieRewiews","pafe"],"sourceRoot":""}